{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\screen-recorder-app\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://recorder-app-2.onrender.com/api';\nfunction App() {\n  _s();\n  // State for recording\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordedVideo, setRecordedVideo] = useState(null);\n  const [timer, setTimer] = useState(0);\n\n  // State for uploads\n  const [recordings, setRecordings] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Refs for recording\n  const mediaRecorder = useRef(null);\n  const stream = useRef(null);\n  const timerInterval = useRef(null);\n\n  // Load recordings when app starts\n  useEffect(() => {\n    loadRecordings();\n  }, []);\n\n  // Handle timer\n  useEffect(() => {\n    if (isRecording) {\n      timerInterval.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev >= 179) {\n            // 3 minutes max\n            stopRecording();\n            return 180;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(timerInterval.current);\n    }\n    return () => clearInterval(timerInterval.current);\n  }, [isRecording]);\n  const startRecording = async () => {\n    try {\n      // Get screen and audio\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      stream.current = screenStream;\n\n      // Create recorder\n      const recorder = new MediaRecorder(screenStream, {\n        mimeType: 'video/webm'\n      });\n      mediaRecorder.current = recorder;\n\n      // Collect video chunks\n      const chunks = [];\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      // Create video when recording stops\n      recorder.onstop = () => {\n        const videoBlob = new Blob(chunks, {\n          type: 'video/webm'\n        });\n        setRecordedVideo(URL.createObjectURL(videoBlob));\n      };\n\n      // Start recording\n      recorder.start();\n      setIsRecording(true);\n      setTimer(0);\n      setRecordedVideo(null);\n    } catch (error) {\n      alert('Cannot start recording. Please allow screen access.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder.current && isRecording) {\n      mediaRecorder.current.stop();\n      stream.current.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const downloadRecording = () => {\n    if (!recordedVideo) return;\n    const link = document.createElement('a');\n    link.href = recordedVideo;\n    link.download = `recording-${Date.now()}.webm`;\n    link.click();\n  };\n  const uploadRecording = async () => {\n    if (!recordedVideo) return;\n    try {\n      setIsUploading(true);\n\n      // Prepare file for upload\n      const formData = new FormData();\n      const blob = await fetch(recordedVideo).then(r => r.blob());\n      formData.append('video', blob, `recording-${Date.now()}.webm`);\n      console.log('=== UPLOAD DEBUG INFO ===');\n      console.log('File size:', blob.size, 'bytes');\n      console.log('File type:', blob.type);\n      console.log('API URL:', `${API_URL}/recordings`);\n      console.log('FormData entries:');\n      for (let [key, value] of formData.entries()) {\n        console.log(key, value);\n      }\n\n      // Upload to server\n      const response = await axios.post(`${API_URL}/recordings`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 60000,\n        // 60 second timeout\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          console.log(`Upload progress: ${percentCompleted}%`);\n        }\n      });\n      console.log('Upload response:', response.data);\n      alert('Recording uploaded successfully!');\n      loadRecordings(); // Refresh list\n      setRecordedVideo(null);\n      setTimer(0);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6, _error$response6$data;\n      console.error('=== UPLOAD ERROR ===');\n      console.error('Full error:', error);\n      console.error('Error message:', error.message);\n      console.error('Error code:', error.code);\n      console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      console.error('Error headers:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.headers);\n      let errorMessage = 'Upload failed. ';\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 413) {\n        errorMessage += 'File too large (max 50MB).';\n      } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 400) {\n        errorMessage += 'Invalid file format or no file sent.';\n      } else if (error.code === 'ECONNABORTED') {\n        errorMessage += 'Upload timeout (60s).';\n      } else if (error.code === 'ERR_NETWORK') {\n        errorMessage += 'Network error - check your connection.';\n      } else if ((_error$response6 = error.response) !== null && _error$response6 !== void 0 && (_error$response6$data = _error$response6.data) !== null && _error$response6$data !== void 0 && _error$response6$data.error) {\n        errorMessage += error.response.data.error;\n      } else {\n        errorMessage += `Error: ${error.message}`;\n      }\n      alert(errorMessage);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const loadRecordings = async () => {\n    try {\n      console.log('Testing connection to:', API_URL);\n      const response = await axios.get(`${API_URL}/recordings`);\n      setRecordings(response.data);\n      console.log('Successfully loaded recordings:', response.data);\n    } catch (error) {\n      var _error$response7;\n      console.error('Could not load recordings:', error);\n      console.error('Error details:', (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data);\n    }\n  };\n\n  // Helper functions\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center text-gray-800 mb-8\",\n        children: \"Screen Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-5xl font-mono text-blue-600 mb-4\",\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startRecording,\n            className: \"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-semibold\",\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopRecording,\n            className: \"bg-red-500 hover:bg-red-600 text-white px-8 py-3 rounded-lg font-semibold\",\n            children: \"Stop Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), timer >= 180 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-600 mt-2\",\n            children: \"Maximum time reached!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), recordedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Your Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: recordedVideo,\n          controls: true,\n          className: \"w-full rounded-lg mb-4\",\n          style: {\n            maxHeight: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadRecording,\n            className: \"bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: uploadRecording,\n            disabled: isUploading,\n            className: \"bg-purple-500 hover:bg-purple-600 disabled:bg-gray-400 text-white px-6 py-2 rounded-lg\",\n            children: isUploading ? 'Uploading...' : 'Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Saved Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), recordings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center py-8\",\n          children: \"No recordings saved yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-4 md:grid-cols-2\",\n          children: recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-medium text-gray-800\",\n                children: recording.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: [formatFileSize(recording.filesize), \" \\u2022 \", formatDate(recording.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              src: `${API_URL}/recordings/${recording.id}`,\n              controls: true,\n              className: \"w-full rounded-lg\",\n              style: {\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1ymCc5/ukNtS7IFOC5JnHB2iKzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","API_URL","App","_s","isRecording","setIsRecording","recordedVideo","setRecordedVideo","timer","setTimer","recordings","setRecordings","isUploading","setIsUploading","mediaRecorder","stream","timerInterval","loadRecordings","current","setInterval","prev","stopRecording","clearInterval","startRecording","screenStream","navigator","mediaDevices","getDisplayMedia","video","audio","recorder","MediaRecorder","mimeType","chunks","ondataavailable","event","data","size","push","onstop","videoBlob","Blob","type","URL","createObjectURL","start","error","alert","stop","getTracks","forEach","track","downloadRecording","link","document","createElement","href","download","Date","now","click","uploadRecording","formData","FormData","blob","fetch","then","r","append","console","log","key","value","entries","response","post","headers","timeout","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response6$data","message","code","status","errorMessage","get","_error$response7","formatTime","seconds","mins","floor","secs","toString","padStart","formatFileSize","bytes","sizes","i","pow","toFixed","formatDate","dateString","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","style","maxHeight","disabled","length","map","recording","filename","filesize","createdAt","id","_c","$RefreshReg$"],"sources":["C:/Users/ashwi/OneDrive/Desktop/screen-recorder-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://recorder-app-2.onrender.com/api';\r\n\r\nfunction App() {\r\n  // State for recording\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordedVideo, setRecordedVideo] = useState(null);\r\n  const [timer, setTimer] = useState(0);\r\n  \r\n  // State for uploads\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  \r\n  // Refs for recording\r\n  const mediaRecorder = useRef(null);\r\n  const stream = useRef(null);\r\n  const timerInterval = useRef(null);\r\n\r\n  // Load recordings when app starts\r\n  useEffect(() => {\r\n    loadRecordings();\r\n  }, []);\r\n\r\n  // Handle timer\r\n  useEffect(() => {\r\n    if (isRecording) {\r\n      timerInterval.current = setInterval(() => {\r\n        setTimer(prev => {\r\n          if (prev >= 179) { // 3 minutes max\r\n            stopRecording();\r\n            return 180;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timerInterval.current);\r\n    }\r\n\r\n    return () => clearInterval(timerInterval.current);\r\n  }, [isRecording]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      // Get screen and audio\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n        audio: true\r\n      });\r\n      \r\n      stream.current = screenStream;\r\n      \r\n      // Create recorder\r\n      const recorder = new MediaRecorder(screenStream, {\r\n        mimeType: 'video/webm'\r\n      });\r\n      \r\n      mediaRecorder.current = recorder;\r\n      \r\n      // Collect video chunks\r\n      const chunks = [];\r\n      recorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunks.push(event.data);\r\n        }\r\n      };\r\n      \r\n      // Create video when recording stops\r\n      recorder.onstop = () => {\r\n        const videoBlob = new Blob(chunks, { type: 'video/webm' });\r\n        setRecordedVideo(URL.createObjectURL(videoBlob));\r\n      };\r\n      \r\n      // Start recording\r\n      recorder.start();\r\n      setIsRecording(true);\r\n      setTimer(0);\r\n      setRecordedVideo(null);\r\n      \r\n    } catch (error) {\r\n      alert('Cannot start recording. Please allow screen access.');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder.current && isRecording) {\r\n      mediaRecorder.current.stop();\r\n      stream.current.getTracks().forEach(track => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const downloadRecording = () => {\r\n    if (!recordedVideo) return;\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = recordedVideo;\r\n    link.download = `recording-${Date.now()}.webm`;\r\n    link.click();\r\n  };\r\n\r\n  const uploadRecording = async () => {\r\n    if (!recordedVideo) return;\r\n\r\n    try {\r\n      setIsUploading(true);\r\n\r\n      // Prepare file for upload\r\n      const formData = new FormData();\r\n      const blob = await fetch(recordedVideo).then(r => r.blob());\r\n      formData.append('video', blob, `recording-${Date.now()}.webm`);\r\n\r\n      console.log('=== UPLOAD DEBUG INFO ===');\r\n      console.log('File size:', blob.size, 'bytes');\r\n      console.log('File type:', blob.type);\r\n      console.log('API URL:', `${API_URL}/recordings`);\r\n      console.log('FormData entries:');\r\n      for (let [key, value] of formData.entries()) {\r\n        console.log(key, value);\r\n      }\r\n\r\n      // Upload to server\r\n      const response = await axios.post(`${API_URL}/recordings`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        timeout: 60000, // 60 second timeout\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          console.log(`Upload progress: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      console.log('Upload response:', response.data);\r\n      alert('Recording uploaded successfully!');\r\n      loadRecordings(); // Refresh list\r\n      setRecordedVideo(null);\r\n      setTimer(0);\r\n      \r\n    } catch (error) {\r\n      console.error('=== UPLOAD ERROR ===');\r\n      console.error('Full error:', error);\r\n      console.error('Error message:', error.message);\r\n      console.error('Error code:', error.code);\r\n      console.error('Error response:', error.response?.data);\r\n      console.error('Error status:', error.response?.status);\r\n      console.error('Error headers:', error.response?.headers);\r\n      \r\n      let errorMessage = 'Upload failed. ';\r\n      if (error.response?.status === 413) {\r\n        errorMessage += 'File too large (max 50MB).';\r\n      } else if (error.response?.status === 400) {\r\n        errorMessage += 'Invalid file format or no file sent.';\r\n      } else if (error.code === 'ECONNABORTED') {\r\n        errorMessage += 'Upload timeout (60s).';\r\n      } else if (error.code === 'ERR_NETWORK') {\r\n        errorMessage += 'Network error - check your connection.';\r\n      } else if (error.response?.data?.error) {\r\n        errorMessage += error.response.data.error;\r\n      } else {\r\n        errorMessage += `Error: ${error.message}`;\r\n      }\r\n      \r\n      alert(errorMessage);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const loadRecordings = async () => {\r\n    try {\r\n      console.log('Testing connection to:', API_URL);\r\n      const response = await axios.get(`${API_URL}/recordings`);\r\n      setRecordings(response.data);\r\n      console.log('Successfully loaded recordings:', response.data);\r\n    } catch (error) {\r\n      console.error('Could not load recordings:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // Helper functions\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"max-w-4xl mx-auto px-4\">\r\n        <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-8\">\r\n          Screen Recorder\r\n        </h1>\r\n\r\n        {/* Recording Section */}\r\n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-5xl font-mono text-blue-600 mb-4\">\r\n              {formatTime(timer)}\r\n            </div>\r\n            \r\n            {!isRecording ? (\r\n              <button\r\n                onClick={startRecording}\r\n                className=\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-semibold\"\r\n              >\r\n                Start Recording\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={stopRecording}\r\n                className=\"bg-red-500 hover:bg-red-600 text-white px-8 py-3 rounded-lg font-semibold\"\r\n              >\r\n                Stop Recording\r\n              </button>\r\n            )}\r\n\r\n            {timer >= 180 && (\r\n              <p className=\"text-red-600 mt-2\">Maximum time reached!</p>\r\n            )}\r\n            \r\n            {/* <button\r\n              onClick={testConnection}\r\n              className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg mt-2\"\r\n            >\r\n              Test Backend Connection\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Video Preview */}\r\n        {recordedVideo && (\r\n          <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Your Recording</h2>\r\n            <video\r\n              src={recordedVideo}\r\n              controls\r\n              className=\"w-full rounded-lg mb-4\"\r\n              style={{ maxHeight: '300px' }}\r\n            />\r\n            <div className=\"flex gap-4 justify-center\">\r\n              <button\r\n                onClick={downloadRecording}\r\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg\"\r\n              >\r\n                Download\r\n              </button>\r\n              <button\r\n                onClick={uploadRecording}\r\n                disabled={isUploading}\r\n                className=\"bg-purple-500 hover:bg-purple-600 disabled:bg-gray-400 text-white px-6 py-2 rounded-lg\"\r\n              >\r\n                {isUploading ? 'Uploading...' : 'Upload'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Saved Recordings */}\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Saved Recordings</h2>\r\n          {recordings.length === 0 ? (\r\n            <p className=\"text-gray-500 text-center py-8\">No recordings saved yet.</p>\r\n          ) : (\r\n            <div className=\"grid gap-4 md:grid-cols-2\">\r\n              {recordings.map((recording) => (\r\n                <div key={recording.id} className=\"border rounded-lg p-4\">\r\n                  <div className=\"mb-3\">\r\n                    <h3 className=\"font-medium text-gray-800\">\r\n                      {recording.filename}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {formatFileSize(recording.filesize)} • {formatDate(recording.createdAt)}\r\n                    </p>\r\n                  </div>\r\n                  <video\r\n                    src={`${API_URL}/recordings/${recording.id}`}\r\n                    controls\r\n                    className=\"w-full rounded-lg\"\r\n                    style={{ maxHeight: '200px' }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}