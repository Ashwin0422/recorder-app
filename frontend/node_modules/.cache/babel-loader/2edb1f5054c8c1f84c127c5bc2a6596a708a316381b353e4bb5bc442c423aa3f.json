{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\screen-recorder-app\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  // State for recording\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordedVideo, setRecordedVideo] = useState(null);\n  const [timer, setTimer] = useState(0);\n\n  // State for uploads\n  const [recordings, setRecordings] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Refs for recording\n  const mediaRecorder = useRef(null);\n  const stream = useRef(null);\n  const timerInterval = useRef(null);\n\n  // Load recordings when app starts\n  useEffect(() => {\n    loadRecordings();\n  }, []);\n\n  // Handle timer\n  useEffect(() => {\n    if (isRecording) {\n      timerInterval.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev >= 179) {\n            // 3 minutes max\n            stopRecording();\n            return 180;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(timerInterval.current);\n    }\n    return () => clearInterval(timerInterval.current);\n  }, [isRecording]);\n  const startRecording = async () => {\n    try {\n      // Get screen and audio\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      stream.current = screenStream;\n\n      // Create recorder\n      const recorder = new MediaRecorder(screenStream, {\n        mimeType: 'video/webm'\n      });\n      mediaRecorder.current = recorder;\n\n      // Collect video chunks\n      const chunks = [];\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      // Create video when recording stops\n      recorder.onstop = () => {\n        const videoBlob = new Blob(chunks, {\n          type: 'video/webm'\n        });\n        setRecordedVideo(URL.createObjectURL(videoBlob));\n      };\n\n      // Start recording\n      recorder.start();\n      setIsRecording(true);\n      setTimer(0);\n      setRecordedVideo(null);\n    } catch (error) {\n      alert('Cannot start recording. Please allow screen access.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder.current && isRecording) {\n      mediaRecorder.current.stop();\n      stream.current.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const downloadRecording = () => {\n    if (recordedVideo) {\n      const url = recordedVideo;\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `screen-recording-${Date.now()}.webm`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n  const uploadRecording = async () => {\n    if (!recordedVideo) return;\n    try {\n      setIsUploading(true);\n      setUploadProgress(0);\n      const formData = new FormData();\n      const blob = await fetch(recordedVideo).then(r => r.blob());\n      formData.append('video', blob, `recording-${Date.now()}.webm`);\n      const response = await axios.post(`${API_BASE_URL}/recordings`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        }\n      });\n      if (response.data) {\n        alert('Recording uploaded successfully!');\n        fetchRecordings(); // Refresh the list\n        setRecordedVideo(null);\n        setRecordedChunks([]);\n        setTimer(0);\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Failed to upload recording. Please try again.');\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const fetchRecordings = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/recordings`);\n      setRecordings(response.data);\n    } catch (error) {\n      console.error('Error fetching recordings:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center text-gray-800 mb-8\",\n        children: \"MERN Screen Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-6xl font-mono text-blue-600\",\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startRecording,\n              className: \"bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors\",\n              children: \"Start Recording\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopRecording,\n              className: \"bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors\",\n              children: \"Stop Recording\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), timer >= 180 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-600 font-semibold\",\n            children: \"Maximum recording time (3 minutes) reached!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), recordedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Recording Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            src: recordedVideo,\n            controls: true,\n            className: \"max-w-full h-auto rounded-lg shadow-md\",\n            style: {\n              maxHeight: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadRecording,\n              className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors\",\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: uploadRecording,\n              disabled: isUploading,\n              className: \"bg-purple-500 hover:bg-purple-600 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg font-semibold transition-colors\",\n              children: isUploading ? `Uploading... ${uploadProgress}%` : 'Upload to Server'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Uploaded Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), recordings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center py-8\",\n          children: \"No recordings uploaded yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-4 md:grid-cols-2 lg:grid-cols-3\",\n          children: recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded-lg p-4 hover:shadow-md transition-shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-800 truncate\",\n                children: recording.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: [\"Size: \", formatFileSize(recording.filesize)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: formatDate(recording.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              src: `${API_BASE_URL}/recordings/${recording.id}`,\n              controls: true,\n              className: \"w-full h-auto rounded-lg\",\n              style: {\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1ymCc5/ukNtS7IFOC5JnHB2iKzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","API_URL","App","_s","isRecording","setIsRecording","recordedVideo","setRecordedVideo","timer","setTimer","recordings","setRecordings","isUploading","setIsUploading","mediaRecorder","stream","timerInterval","loadRecordings","current","setInterval","prev","stopRecording","clearInterval","startRecording","screenStream","navigator","mediaDevices","getDisplayMedia","video","audio","recorder","MediaRecorder","mimeType","chunks","ondataavailable","event","data","size","push","onstop","videoBlob","Blob","type","URL","createObjectURL","start","error","alert","stop","getTracks","forEach","track","downloadRecording","url","a","document","createElement","href","download","Date","now","body","appendChild","click","removeChild","uploadRecording","setUploadProgress","formData","FormData","blob","fetch","then","r","append","response","post","API_BASE_URL","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","fetchRecordings","setRecordedChunks","console","get","formatTime","seconds","mins","floor","secs","toString","padStart","formatFileSize","bytes","k","sizes","i","log","parseFloat","pow","toFixed","formatDate","dateString","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","style","maxHeight","disabled","uploadProgress","length","map","recording","filename","filesize","createdAt","id","_c","$RefreshReg$"],"sources":["C:/Users/ashwi/OneDrive/Desktop/screen-recorder-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nfunction App() {\r\n  // State for recording\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordedVideo, setRecordedVideo] = useState(null);\r\n  const [timer, setTimer] = useState(0);\r\n  \r\n  // State for uploads\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  \r\n  // Refs for recording\r\n  const mediaRecorder = useRef(null);\r\n  const stream = useRef(null);\r\n  const timerInterval = useRef(null);\r\n\r\n  // Load recordings when app starts\r\n  useEffect(() => {\r\n    loadRecordings();\r\n  }, []);\r\n\r\n  // Handle timer\r\n  useEffect(() => {\r\n    if (isRecording) {\r\n      timerInterval.current = setInterval(() => {\r\n        setTimer(prev => {\r\n          if (prev >= 179) { // 3 minutes max\r\n            stopRecording();\r\n            return 180;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timerInterval.current);\r\n    }\r\n\r\n    return () => clearInterval(timerInterval.current);\r\n  }, [isRecording]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      // Get screen and audio\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n        audio: true\r\n      });\r\n      \r\n      stream.current = screenStream;\r\n      \r\n      // Create recorder\r\n      const recorder = new MediaRecorder(screenStream, {\r\n        mimeType: 'video/webm'\r\n      });\r\n      \r\n      mediaRecorder.current = recorder;\r\n      \r\n      // Collect video chunks\r\n      const chunks = [];\r\n      recorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunks.push(event.data);\r\n        }\r\n      };\r\n      \r\n      // Create video when recording stops\r\n      recorder.onstop = () => {\r\n        const videoBlob = new Blob(chunks, { type: 'video/webm' });\r\n        setRecordedVideo(URL.createObjectURL(videoBlob));\r\n      };\r\n      \r\n      // Start recording\r\n      recorder.start();\r\n      setIsRecording(true);\r\n      setTimer(0);\r\n      setRecordedVideo(null);\r\n      \r\n    } catch (error) {\r\n      alert('Cannot start recording. Please allow screen access.');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder.current && isRecording) {\r\n      mediaRecorder.current.stop();\r\n      stream.current.getTracks().forEach(track => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const downloadRecording = () => {\r\n    if (recordedVideo) {\r\n      const url = recordedVideo;\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `screen-recording-${Date.now()}.webm`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    }\r\n  };\r\n\r\n  const uploadRecording = async () => {\r\n    if (!recordedVideo) return;\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      setUploadProgress(0);\r\n\r\n      const formData = new FormData();\r\n      const blob = await fetch(recordedVideo).then(r => r.blob());\r\n      formData.append('video', blob, `recording-${Date.now()}.webm`);\r\n\r\n      const response = await axios.post(`${API_BASE_URL}/recordings`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          setUploadProgress(progress);\r\n        },\r\n      });\r\n\r\n      if (response.data) {\r\n        alert('Recording uploaded successfully!');\r\n        fetchRecordings(); // Refresh the list\r\n        setRecordedVideo(null);\r\n        setRecordedChunks([]);\r\n        setTimer(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      alert('Failed to upload recording. Please try again.');\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const fetchRecordings = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/recordings`);\r\n      setRecordings(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching recordings:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"max-w-6xl mx-auto px-4\">\r\n        <h1 className=\"text-4xl font-bold text-center text-gray-800 mb-8\">\r\n          MERN Screen Recorder\r\n        </h1>\r\n\r\n        {/* Recording Controls */}\r\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\r\n          <div className=\"flex flex-col items-center space-y-4\">\r\n            <div className=\"text-6xl font-mono text-blue-600\">\r\n              {formatTime(timer)}\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              {!isRecording ? (\r\n                <button\r\n                  onClick={startRecording}\r\n                  className=\"bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors\"\r\n                >\r\n                  Start Recording\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={stopRecording}\r\n                  className=\"bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors\"\r\n                >\r\n                  Stop Recording\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            {timer >= 180 && (\r\n              <div className=\"text-red-600 font-semibold\">\r\n                Maximum recording time (3 minutes) reached!\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recorded Video Preview */}\r\n        {recordedVideo && (\r\n          <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Recording Preview</h2>\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <video\r\n                src={recordedVideo}\r\n                controls\r\n                className=\"max-w-full h-auto rounded-lg shadow-md\"\r\n                style={{ maxHeight: '400px' }}\r\n              />\r\n              <div className=\"flex space-x-4\">\r\n                <button\r\n                  onClick={downloadRecording}\r\n                  className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors\"\r\n                >\r\n                  Download\r\n                </button>\r\n                <button\r\n                  onClick={uploadRecording}\r\n                  disabled={isUploading}\r\n                  className=\"bg-purple-500 hover:bg-purple-600 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg font-semibold transition-colors\"\r\n                >\r\n                  {isUploading ? `Uploading... ${uploadProgress}%` : 'Upload to Server'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Uploaded Recordings */}\r\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Uploaded Recordings</h2>\r\n          {recordings.length === 0 ? (\r\n            <p className=\"text-gray-500 text-center py-8\">No recordings uploaded yet.</p>\r\n          ) : (\r\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n              {recordings.map((recording) => (\r\n                <div key={recording.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                  <div className=\"mb-3\">\r\n                    <h3 className=\"font-semibold text-gray-800 truncate\">\r\n                      {recording.filename}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Size: {formatFileSize(recording.filesize)}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {formatDate(recording.createdAt)}\r\n                    </p>\r\n                  </div>\r\n                  <video\r\n                    src={`${API_BASE_URL}/recordings/${recording.id}`}\r\n                    controls\r\n                    className=\"w-full h-auto rounded-lg\"\r\n                    style={{ maxHeight: '200px' }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}