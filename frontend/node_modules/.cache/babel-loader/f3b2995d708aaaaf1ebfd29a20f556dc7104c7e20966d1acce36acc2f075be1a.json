{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\screen-recorder-app\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://recorder-app-2.onrender.com/api';\nfunction App() {\n  _s();\n  // Authentication state\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  // State for recording\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordedVideo, setRecordedVideo] = useState(null);\n  const [timer, setTimer] = useState(0);\n\n  // State for uploads\n  const [recordings, setRecordings] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Refs for recording\n  const mediaRecorder = useRef(null);\n  const stream = useRef(null);\n  const timerInterval = useRef(null);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const savedUser = localStorage.getItem('username');\n    if (savedUser) {\n      setUsername(savedUser);\n      setIsLoggedIn(true);\n      loadRecordings();\n    }\n  }, []);\n\n  // Handle timer\n  useEffect(() => {\n    if (isRecording) {\n      timerInterval.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev >= 179) {\n            // 3 minutes max\n            stopRecording();\n            return 180;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(timerInterval.current);\n    }\n    return () => clearInterval(timerInterval.current);\n  }, [isRecording]);\n\n  // Authentication functions\n  const handleLogin = e => {\n    e.preventDefault();\n    const inputUsername = e.target.username.value.trim();\n    if (!inputUsername) {\n      setLoginError('Please enter a username');\n      return;\n    }\n    if (inputUsername.length < 3) {\n      setLoginError('Username must be at least 3 characters');\n      return;\n    }\n    setUsername(inputUsername);\n    setIsLoggedIn(true);\n    setLoginError('');\n    localStorage.setItem('username', inputUsername);\n    loadRecordings();\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUsername('');\n    setRecordings([]);\n    setRecordedVideo(null);\n    setTimer(0);\n    localStorage.removeItem('username');\n  };\n  const startRecording = async () => {\n    try {\n      // Get screen and audio\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      stream.current = screenStream;\n\n      // Create recorder\n      const recorder = new MediaRecorder(screenStream, {\n        mimeType: 'video/webm'\n      });\n      mediaRecorder.current = recorder;\n\n      // Collect video chunks\n      const chunks = [];\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      // Create video when recording stops\n      recorder.onstop = () => {\n        const videoBlob = new Blob(chunks, {\n          type: 'video/webm'\n        });\n        setRecordedVideo(URL.createObjectURL(videoBlob));\n      };\n\n      // Start recording\n      recorder.start();\n      setIsRecording(true);\n      setTimer(0);\n      setRecordedVideo(null);\n    } catch (error) {\n      alert('Cannot start recording. Please allow screen access.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder.current && isRecording) {\n      mediaRecorder.current.stop();\n      stream.current.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const downloadRecording = () => {\n    if (!recordedVideo) return;\n    const link = document.createElement('a');\n    link.href = recordedVideo;\n    link.download = `recording-${Date.now()}.webm`;\n    link.click();\n  };\n  const uploadRecording = async () => {\n    if (!recordedVideo) return;\n    try {\n      setIsUploading(true);\n\n      // Prepare file for upload\n      const formData = new FormData();\n      const blob = await fetch(recordedVideo).then(r => r.blob());\n      formData.append('video', blob, `recording-${Date.now()}.webm`);\n      console.log('=== UPLOAD DEBUG INFO ===');\n      console.log('File size:', blob.size, 'bytes');\n      console.log('File type:', blob.type);\n      console.log('API URL:', `${API_URL}/recordings`);\n      console.log('FormData entries:');\n      for (let [key, value] of formData.entries()) {\n        console.log(key, value);\n      }\n\n      // Upload to server\n      const response = await axios.post(`${API_URL}/recordings`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 60000,\n        // 60 second timeout\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          console.log(`Upload progress: ${percentCompleted}%`);\n        }\n      });\n      console.log('Upload response:', response.data);\n      alert('Recording uploaded successfully!');\n      loadRecordings(); // Refresh list\n      setRecordedVideo(null);\n      setTimer(0);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6, _error$response6$data;\n      console.error('=== UPLOAD ERROR ===');\n      console.error('Full error:', error);\n      console.error('Error message:', error.message);\n      console.error('Error code:', error.code);\n      console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      console.error('Error headers:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.headers);\n      let errorMessage = 'Upload failed. ';\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 413) {\n        errorMessage += 'File too large (max 50MB).';\n      } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 400) {\n        errorMessage += 'Invalid file format or no file sent.';\n      } else if (error.code === 'ECONNABORTED') {\n        errorMessage += 'Upload timeout (60s).';\n      } else if (error.code === 'ERR_NETWORK') {\n        errorMessage += 'Network error - check your connection.';\n      } else if ((_error$response6 = error.response) !== null && _error$response6 !== void 0 && (_error$response6$data = _error$response6.data) !== null && _error$response6$data !== void 0 && _error$response6$data.error) {\n        errorMessage += error.response.data.error;\n      } else {\n        errorMessage += `Error: ${error.message}`;\n      }\n      alert(errorMessage);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const loadRecordings = async () => {\n    try {\n      console.log('Testing connection to:', API_URL);\n      const response = await axios.get(`${API_URL}/recordings`);\n      setRecordings(response.data);\n      console.log('Successfully loaded recordings:', response.data);\n    } catch (error) {\n      var _error$response7;\n      console.error('Could not load recordings:', error);\n      console.error('Error details:', (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data);\n    }\n  };\n\n  // Helper functions\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  // Login Component\n  const LoginForm = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-900 mb-2\",\n          children: \"Screen Recorder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Enter your username to start recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"mt-8 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            name: \"username\",\n            type: \"text\",\n            required: true,\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            placeholder: \"Enter your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-600 text-sm text-center\",\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors\",\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-sm text-gray-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No password required - just pick a username!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n\n  // Main App Component\n  const MainApp = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-800\",\n          children: \"Screen Recorder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-5xl font-mono text-blue-600 mb-4\",\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startRecording,\n            className: \"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-semibold\",\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopRecording,\n            className: \"bg-red-500 hover:bg-red-600 text-white px-8 py-3 rounded-lg font-semibold\",\n            children: \"Stop Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), timer >= 180 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-600 mt-2\",\n            children: \"Maximum time reached!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), recordedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Your Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: recordedVideo,\n          controls: true,\n          className: \"w-full rounded-lg mb-4\",\n          style: {\n            maxHeight: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadRecording,\n            className: \"bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: uploadRecording,\n            disabled: isUploading,\n            className: \"bg-purple-500 hover:bg-purple-600 disabled:bg-gray-400 text-white px-6 py-2 rounded-lg\",\n            children: isUploading ? 'Uploading...' : 'Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Saved Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), recordings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center py-8\",\n          children: \"No recordings saved yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-4 md:grid-cols-2\",\n          children: recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-medium text-gray-800\",\n                children: recording.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: [formatFileSize(recording.filesize), \" \\u2022 \", formatDate(recording.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              src: `${API_URL}/recordings/${recording.id}`,\n              controls: true,\n              className: \"w-full rounded-lg\",\n              style: {\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n\n  // Main return with conditional rendering\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 37\n  }, this);\n}\n_s(App, \"QatlCUZNcEtt5gXTdJaz9jAcLkg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","API_URL","App","_s","isLoggedIn","setIsLoggedIn","username","setUsername","loginError","setLoginError","isRecording","setIsRecording","recordedVideo","setRecordedVideo","timer","setTimer","recordings","setRecordings","isUploading","setIsUploading","mediaRecorder","stream","timerInterval","savedUser","localStorage","getItem","loadRecordings","current","setInterval","prev","stopRecording","clearInterval","handleLogin","e","preventDefault","inputUsername","target","value","trim","length","setItem","handleLogout","removeItem","startRecording","screenStream","navigator","mediaDevices","getDisplayMedia","video","audio","recorder","MediaRecorder","mimeType","chunks","ondataavailable","event","data","size","push","onstop","videoBlob","Blob","type","URL","createObjectURL","start","error","alert","stop","getTracks","forEach","track","downloadRecording","link","document","createElement","href","download","Date","now","click","uploadRecording","formData","FormData","blob","fetch","then","r","append","console","log","key","entries","response","post","headers","timeout","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response6$data","message","code","status","errorMessage","get","_error$response7","formatTime","seconds","mins","floor","secs","toString","padStart","formatFileSize","bytes","sizes","i","pow","toFixed","formatDate","dateString","toLocaleDateString","LoginForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","required","placeholder","MainApp","onClick","src","controls","style","maxHeight","disabled","map","recording","filename","filesize","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/ashwi/OneDrive/Desktop/screen-recorder-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://recorder-app-2.onrender.com/api';\r\n\r\nfunction App() {\r\n  // Authentication state\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [loginError, setLoginError] = useState('');\r\n  \r\n  // State for recording\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordedVideo, setRecordedVideo] = useState(null);\r\n  const [timer, setTimer] = useState(0);\r\n  \r\n  // State for uploads\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  \r\n  // Refs for recording\r\n  const mediaRecorder = useRef(null);\r\n  const stream = useRef(null);\r\n  const timerInterval = useRef(null);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('username');\r\n    if (savedUser) {\r\n      setUsername(savedUser);\r\n      setIsLoggedIn(true);\r\n      loadRecordings();\r\n    }\r\n  }, []);\r\n\r\n  // Handle timer\r\n  useEffect(() => {\r\n    if (isRecording) {\r\n      timerInterval.current = setInterval(() => {\r\n        setTimer(prev => {\r\n          if (prev >= 179) { // 3 minutes max\r\n            stopRecording();\r\n            return 180;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timerInterval.current);\r\n    }\r\n\r\n    return () => clearInterval(timerInterval.current);\r\n  }, [isRecording]);\r\n\r\n  // Authentication functions\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const inputUsername = e.target.username.value.trim();\r\n    \r\n    if (!inputUsername) {\r\n      setLoginError('Please enter a username');\r\n      return;\r\n    }\r\n    \r\n    if (inputUsername.length < 3) {\r\n      setLoginError('Username must be at least 3 characters');\r\n      return;\r\n    }\r\n    \r\n    setUsername(inputUsername);\r\n    setIsLoggedIn(true);\r\n    setLoginError('');\r\n    localStorage.setItem('username', inputUsername);\r\n    loadRecordings();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    setUsername('');\r\n    setRecordings([]);\r\n    setRecordedVideo(null);\r\n    setTimer(0);\r\n    localStorage.removeItem('username');\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      // Get screen and audio\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n        audio: true\r\n      });\r\n      \r\n      stream.current = screenStream;\r\n      \r\n      // Create recorder\r\n      const recorder = new MediaRecorder(screenStream, {\r\n        mimeType: 'video/webm'\r\n      });\r\n      \r\n      mediaRecorder.current = recorder;\r\n      \r\n      // Collect video chunks\r\n      const chunks = [];\r\n      recorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunks.push(event.data);\r\n        }\r\n      };\r\n      \r\n      // Create video when recording stops\r\n      recorder.onstop = () => {\r\n        const videoBlob = new Blob(chunks, { type: 'video/webm' });\r\n        setRecordedVideo(URL.createObjectURL(videoBlob));\r\n      };\r\n      \r\n      // Start recording\r\n      recorder.start();\r\n      setIsRecording(true);\r\n      setTimer(0);\r\n      setRecordedVideo(null);\r\n      \r\n    } catch (error) {\r\n      alert('Cannot start recording. Please allow screen access.');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder.current && isRecording) {\r\n      mediaRecorder.current.stop();\r\n      stream.current.getTracks().forEach(track => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const downloadRecording = () => {\r\n    if (!recordedVideo) return;\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = recordedVideo;\r\n    link.download = `recording-${Date.now()}.webm`;\r\n    link.click();\r\n  };\r\n\r\n  const uploadRecording = async () => {\r\n    if (!recordedVideo) return;\r\n\r\n    try {\r\n      setIsUploading(true);\r\n\r\n      // Prepare file for upload\r\n      const formData = new FormData();\r\n      const blob = await fetch(recordedVideo).then(r => r.blob());\r\n      formData.append('video', blob, `recording-${Date.now()}.webm`);\r\n\r\n      console.log('=== UPLOAD DEBUG INFO ===');\r\n      console.log('File size:', blob.size, 'bytes');\r\n      console.log('File type:', blob.type);\r\n      console.log('API URL:', `${API_URL}/recordings`);\r\n      console.log('FormData entries:');\r\n      for (let [key, value] of formData.entries()) {\r\n        console.log(key, value);\r\n      }\r\n\r\n      // Upload to server\r\n      const response = await axios.post(`${API_URL}/recordings`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        timeout: 60000, // 60 second timeout\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          console.log(`Upload progress: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      console.log('Upload response:', response.data);\r\n      alert('Recording uploaded successfully!');\r\n      loadRecordings(); // Refresh list\r\n      setRecordedVideo(null);\r\n      setTimer(0);\r\n      \r\n    } catch (error) {\r\n      console.error('=== UPLOAD ERROR ===');\r\n      console.error('Full error:', error);\r\n      console.error('Error message:', error.message);\r\n      console.error('Error code:', error.code);\r\n      console.error('Error response:', error.response?.data);\r\n      console.error('Error status:', error.response?.status);\r\n      console.error('Error headers:', error.response?.headers);\r\n      \r\n      let errorMessage = 'Upload failed. ';\r\n      if (error.response?.status === 413) {\r\n        errorMessage += 'File too large (max 50MB).';\r\n      } else if (error.response?.status === 400) {\r\n        errorMessage += 'Invalid file format or no file sent.';\r\n      } else if (error.code === 'ECONNABORTED') {\r\n        errorMessage += 'Upload timeout (60s).';\r\n      } else if (error.code === 'ERR_NETWORK') {\r\n        errorMessage += 'Network error - check your connection.';\r\n      } else if (error.response?.data?.error) {\r\n        errorMessage += error.response.data.error;\r\n      } else {\r\n        errorMessage += `Error: ${error.message}`;\r\n      }\r\n      \r\n      alert(errorMessage);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const loadRecordings = async () => {\r\n    try {\r\n      console.log('Testing connection to:', API_URL);\r\n      const response = await axios.get(`${API_URL}/recordings`);\r\n      setRecordings(response.data);\r\n      console.log('Successfully loaded recordings:', response.data);\r\n    } catch (error) {\r\n      console.error('Could not load recordings:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  // Helper functions\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Login Component\r\n  const LoginForm = () => (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">Screen Recorder</h1>\r\n          <p className=\"text-gray-600\">Enter your username to start recording</p>\r\n        </div>\r\n        \r\n        <form onSubmit={handleLogin} className=\"mt-8 space-y-6\">\r\n          <div>\r\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Username\r\n            </label>\r\n            <input\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Enter your username\"\r\n            />\r\n          </div>\r\n          \r\n          {loginError && (\r\n            <div className=\"text-red-600 text-sm text-center\">{loginError}</div>\r\n          )}\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors\"\r\n          >\r\n            Start Recording\r\n          </button>\r\n        </form>\r\n        \r\n        <div className=\"text-center text-sm text-gray-500\">\r\n          <p>No password required - just pick a username!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Main App Component\r\n  const MainApp = () => (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"max-w-4xl mx-auto px-4\">\r\n        {/* Header with logout */}\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">Screen Recorder</h1>\r\n          <div className=\"flex items-center gap-4\">\r\n            <span className=\"text-gray-600\">Welcome, <span className=\"font-semibold\">{username}</span></span>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recording Section */}\r\n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-5xl font-mono text-blue-600 mb-4\">\r\n              {formatTime(timer)}\r\n            </div>\r\n            \r\n            {!isRecording ? (\r\n              <button\r\n                onClick={startRecording}\r\n                className=\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-semibold\"\r\n              >\r\n                Start Recording\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={stopRecording}\r\n                className=\"bg-red-500 hover:bg-red-600 text-white px-8 py-3 rounded-lg font-semibold\"\r\n              >\r\n                Stop Recording\r\n              </button>\r\n            )}\r\n\r\n            {timer >= 180 && (\r\n              <p className=\"text-red-600 mt-2\">Maximum time reached!</p>\r\n            )}\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        {/* Video Preview */}\r\n        {recordedVideo && (\r\n          <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Your Recording</h2>\r\n            <video\r\n              src={recordedVideo}\r\n              controls\r\n              className=\"w-full rounded-lg mb-4\"\r\n              style={{ maxHeight: '300px' }}\r\n            />\r\n            <div className=\"flex gap-4 justify-center\">\r\n              <button\r\n                onClick={downloadRecording}\r\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg\"\r\n              >\r\n                Download\r\n              </button>\r\n              <button\r\n                onClick={uploadRecording}\r\n                disabled={isUploading}\r\n                className=\"bg-purple-500 hover:bg-purple-600 disabled:bg-gray-400 text-white px-6 py-2 rounded-lg\"\r\n              >\r\n                {isUploading ? 'Uploading...' : 'Upload'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Saved Recordings */}\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Saved Recordings</h2>\r\n          {recordings.length === 0 ? (\r\n            <p className=\"text-gray-500 text-center py-8\">No recordings saved yet.</p>\r\n          ) : (\r\n            <div className=\"grid gap-4 md:grid-cols-2\">\r\n              {recordings.map((recording) => (\r\n                <div key={recording.id} className=\"border rounded-lg p-4\">\r\n                  <div className=\"mb-3\">\r\n                    <h3 className=\"font-medium text-gray-800\">\r\n                      {recording.filename}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {formatFileSize(recording.filesize)} • {formatDate(recording.createdAt)}\r\n                    </p>\r\n                  </div>\r\n                  <video\r\n                    src={`${API_URL}/recordings/${recording.id}`}\r\n                    controls\r\n                    className=\"w-full rounded-lg\"\r\n                    style={{ maxHeight: '200px' }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Main return with conditional rendering\r\n  return isLoggedIn ? <MainApp /> : <LoginForm />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}